---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true
  vars:
    regular_user: "{{ ansible_env.SUDO_USER or ansible_user }}"
    package_manager:
      Linux_Mint: apt
      MacOS: homebrew
      Raspberry_Pi: apt

  tasks:
    - name: APT Install common packages for Raspberry Pi and Linux
      ansible.builtin.block:
        ansible.builtin.when: ansible_distribution == 'Raspberry Pi OS' or ansible_distribution == 'Ubuntu' or ansible_distribution == 'LinuxMint'
        ansible.builtin.block:
          - name: Install common packages
            ansible.builtin.apt:
              name:
                - ansible
                - awscli
                - bat
                - bc
                - btop
                - curl
                - docker
                - docker-compose
                - flameshot
                - flatpak
                - gcc
                - git
                - google-cloud-cli
                - google-cloud-sdk-gke-gcloud-auth-plugin
                - google-cloud-sdk-terraform-tools
                - gparted
                - gpg
                - graphviz
                - grep
                - htop
                - ipcalc
                - jq
                - less
                - openssl
                - openvpn
                - pciutils
                - perl
                - pwgen
                - ruby-dev
                - sed
                - snap
                - tar
                - telnet
                - terminator
                - tmux
                - traceroute
                - tree
                - ufw
                - unzip
                - vim
                - xclip
                - zip
                - zoxide
                - zsh
                - zsh-syntax-highlighting
              state: present
            when: package_manager[ansible_distribution] == 'apt'
          - name: SNAP Install common packages for Raspberry Pi and Linux
            community.general.snap:
              name:
                - bare
                - brave
                - canonical-livepatch
                - chezmoi
                - code
                - core
                - core18
                - core20
                - core22
                - docker
                - gnome-3-28-1804
                - gnome-3-38-2004
                - gnome-42-2204
                - google-cloud-sdk
                - gtk-common-themes
                - helm
                - postman
                - rpi-imager
                - spotify
                - sublime-text
                - telegram-desktop
                - zoom-client
              state: present
            when: package_manager[ansible_distribution] == 'snap'


    - name: Instalar pacotes usando brew formulae
      ansible.builtin.when: ansible_distribution == 'MacOSX'
      community.general.homebrew:
        name:
          - aws-vault
          - bat
          - btop
          - eza
          - gnupg
          - gnu-sed
          - helm
          - htop
          - ipcalc
          - jq
          - node
          - node@16
          - openssl
          - pwgen
          - telnet
          - tmux
          - watch
          - zoxide
          - zsh-syntax-highlighting
        state: present

    - name: Instalar aplicativos usando brew cask
      ansible.builtin.when: ansible_distribution == 'MacOSX'
      community.general.homebrew:
        type: cask
        name:
           - caffeine
           - rectangle
           - spotify
           - sublime-text
           - visual-studio-code
        state: present

    - name: Install Flatpak on Linux Mint and Raspberry Pi
      ansible.builtin.when: ansible_distribution == 'Linux Mint' or ansible_distribution == 'Raspbian'
      community.general.flatpak:
        name:
          - org.videolan.VLC
          - com.stremio.Stremio
        state: present

    - name: Ensure fonts directory on all systems
      ansible.builtin.file:
        path: "{{ regular_user.home }}/.fonts"
        state: directory
        mode: "0755"
        owner: "{{ regular_user.name }}"

    - name: Install Docker on MacOS
      ansible.builtin.when: ansible_distribution == 'MacOSX'
      community.general.homebrew:
        name:
          - docker
          - docker-compose
        state: present

    - name: Change shell to zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/zsh